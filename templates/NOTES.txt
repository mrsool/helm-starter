{{- range $name, $values := .Values.Servers }}
{{- $fullName := include "<CHARTNAME>.fullname" $ -}}
1. Get the application URL by running these commands:

{{- with $values.ingress }}
  {{- if .enabled }}
    {{- range $host := .hosts }}
      {{- if $host.subdomain.enabled }}
        {{- $subdomain := default $fullName $host.subdomain.value }}
https://{{ $subdomain }}.{{ $host.zone }}{{ .path }}
      {{- else }}
https://{{ $host.zone }}{{ .path }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

{{- with $values.service }}
  {{- if contains "NodePort" .type }}
export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "<CHARTNAME>.fullname" . }})
export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
echo http://$NODE_IP:$NODE_PORT

  {{- else if contains "LoadBalancer" .type }}
NOTE: It may take a few minutes for the LoadBalancer IP to be available.
You can watch the status by running 'kubectl get svc -w {{ include "<CHARTNAME>.fullname" . }}'
export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ include "<CHARTNAME>.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
echo http://$SERVICE_IP:{{ .port }}

  {{- else if contains "ClusterIP" .type }}
export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app.kubernetes.io/name={{ include "<CHARTNAME>.name" $ }},app.kubernetes.io/instance={{ $.Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
echo "Visit http://127.0.0.1:8080 to use your application"
kubectl port-forward $POD_NAME 8080:80
  {{- end }}
{{- end }}

{{- end }}